name: CI

on:
  push: {}

jobs:
  clippy:
    name: Clippy ${{matrix.os}}
    runs-on: ${{matrix.os}}-latest
    strategy:
      matrix:
        os: [ubuntu, windows, macos]
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            components: clippy
            override: true
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-targets --all-features -- -D warnings

  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            components: rustfmt
            override: true

      - name: Install Erlang/Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: "25"
          elixir-version: "1.13"

      - name: Check cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Check mix format (rustler_mix)
        working-directory: rustler_mix
        run: mix format --check-formatted

      - name: Check mix format (rustler_tests)
        working-directory: rustler_tests
        run: mix format --check-formatted

  rustler_mix_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Install Rust stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install Erlang/Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: "24.1.7"
          elixir-version: 1.13

      - name: Test rustler_mix
        working-directory: rustler_mix
        run: ./test.sh

  test:
    name: OTP ${{matrix.pair.erlang}} / Elixir ${{matrix.pair.elixir}} / Rust ${{matrix.rust}} / OS ${{matrix.os}}
    runs-on: ${{matrix.os}}-latest
    strategy:
      matrix:
        pair:
          - { erlang: "25", elixir: "1.13" }
          - { erlang: "24", elixir: "1.13" }
          - { erlang: "24", elixir: "1.12" }
          - { erlang: "24", elixir: "1.11" }
          - { erlang: "23", elixir: "1.11" }
        rust:
          - stable
          - beta
          - nightly
        os:
          - windows
          - ubuntu
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Install Erlang/Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.pair.erlang}}
          elixir-version: ${{matrix.pair.elixir}}

      - name: Install Rust ${{matrix.rust}} toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{matrix.rust}}
          override: true

      - run: cargo test

      - name: Test rustler_mix
        working-directory: rustler_mix
        run: |
          mix deps.get
          mix test

      - name: Test rustler_tests
        working-directory: rustler_tests
        run: |
          mix deps.get
          mix test

  test_macos:
    name: macos-11 test
    runs-on: macos-11
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Install Erlang/Elixir
        run: |
          brew install elixir
          mix local.hex --force

      - name: Install Rust ${{matrix.rust}} toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - run: cargo test

      - name: Test rustler_mix
        working-directory: rustler_mix
        run: |
          mix deps.get
          mix test

      - name: Test rustler_tests
        working-directory: rustler_tests
        run: |
          mix deps.get
          mix test
